// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"WLAN::WLANPackageTests::ProductTarget" /* WLANPackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_77 /* Build configuration list for PBXAggregateTarget "WLANPackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_80 /* PBXTargetDependency */,
			);
			name = WLANPackageTests;
			productName = WLANPackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		OBJ_39 /* CWInterface.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* CWInterface.swift */; };
		OBJ_40 /* CWNetwork.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* CWNetwork.swift */; };
		OBJ_41 /* CWWiFiClient.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_13 /* CWWiFiClient.swift */; };
		OBJ_42 /* DarwinWLAN.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* DarwinWLAN.swift */; };
		OBJ_44 /* WLAN.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "WLAN::WLAN::Product" /* WLAN.framework */; };
		OBJ_52 /* LinuxWLAN.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_9 /* LinuxWLAN.swift */; };
		OBJ_54 /* WLAN.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "WLAN::WLAN::Product" /* WLAN.framework */; };
		OBJ_60 /* BSSID.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* BSSID.swift */; };
		OBJ_61 /* ByteSwap.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* ByteSwap.swift */; };
		OBJ_62 /* ByteValue.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_18 /* ByteValue.swift */; };
		OBJ_63 /* Error.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* Error.swift */; };
		OBJ_64 /* Interface.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* Interface.swift */; };
		OBJ_65 /* Network.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_21 /* Network.swift */; };
		OBJ_66 /* SSID.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_22 /* SSID.swift */; };
		OBJ_67 /* ScanRecord.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_23 /* ScanRecord.swift */; };
		OBJ_68 /* WLANManager.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_24 /* WLANManager.swift */; };
		OBJ_75 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
		OBJ_86 /* WLANTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_27 /* WLANTests.swift */; };
		OBJ_88 /* WLAN.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "WLAN::WLAN::Product" /* WLAN.framework */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		6EB7237C20EED8F2002D6A10 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "WLAN::WLAN";
			remoteInfo = WLAN;
		};
		6EB7237D20EED8F2002D6A10 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "WLAN::WLAN";
			remoteInfo = WLAN;
		};
		6EB7237E20EED8F2002D6A10 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "WLAN::WLAN";
			remoteInfo = WLAN;
		};
		6EB7237F20EED8F3002D6A10 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "WLAN::WLANTests";
			remoteInfo = WLANTests;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		OBJ_11 /* CWInterface.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CWInterface.swift; sourceTree = "<group>"; };
		OBJ_12 /* CWNetwork.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CWNetwork.swift; sourceTree = "<group>"; };
		OBJ_13 /* CWWiFiClient.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CWWiFiClient.swift; sourceTree = "<group>"; };
		OBJ_14 /* DarwinWLAN.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DarwinWLAN.swift; sourceTree = "<group>"; };
		OBJ_16 /* BSSID.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BSSID.swift; sourceTree = "<group>"; };
		OBJ_17 /* ByteSwap.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ByteSwap.swift; sourceTree = "<group>"; };
		OBJ_18 /* ByteValue.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ByteValue.swift; sourceTree = "<group>"; };
		OBJ_19 /* Error.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Error.swift; sourceTree = "<group>"; };
		OBJ_20 /* Interface.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Interface.swift; sourceTree = "<group>"; };
		OBJ_21 /* Network.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Network.swift; sourceTree = "<group>"; };
		OBJ_22 /* SSID.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SSID.swift; sourceTree = "<group>"; };
		OBJ_23 /* ScanRecord.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ScanRecord.swift; sourceTree = "<group>"; };
		OBJ_24 /* WLANManager.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = WLANManager.swift; sourceTree = "<group>"; };
		OBJ_27 /* WLANTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = WLANTests.swift; sourceTree = "<group>"; };
		OBJ_28 /* Xcode */ = {isa = PBXFileReference; lastKnownFileType = folder; path = Xcode; sourceTree = SOURCE_ROOT; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_9 /* LinuxWLAN.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LinuxWLAN.swift; sourceTree = "<group>"; };
		"WLAN::DarwinWLAN::Product" /* DarwinWLAN.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = DarwinWLAN.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"WLAN::LinuxWLAN::Product" /* LinuxWLAN.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = LinuxWLAN.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"WLAN::WLAN::Product" /* WLAN.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = WLAN.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"WLAN::WLANTests::Product" /* WLANTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = WLANTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_43 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_44 /* WLAN.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_53 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_54 /* WLAN.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_69 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_87 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_88 /* WLAN.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_10 /* DarwinWLAN */ = {
			isa = PBXGroup;
			children = (
				OBJ_11 /* CWInterface.swift */,
				OBJ_12 /* CWNetwork.swift */,
				OBJ_13 /* CWWiFiClient.swift */,
				OBJ_14 /* DarwinWLAN.swift */,
			);
			name = DarwinWLAN;
			path = Sources/DarwinWLAN;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_15 /* WLAN */ = {
			isa = PBXGroup;
			children = (
				OBJ_16 /* BSSID.swift */,
				OBJ_17 /* ByteSwap.swift */,
				OBJ_18 /* ByteValue.swift */,
				OBJ_19 /* Error.swift */,
				OBJ_20 /* Interface.swift */,
				OBJ_21 /* Network.swift */,
				OBJ_22 /* SSID.swift */,
				OBJ_23 /* ScanRecord.swift */,
				OBJ_24 /* WLANManager.swift */,
			);
			name = WLAN;
			path = Sources/WLAN;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_25 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_26 /* WLANTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_26 /* WLANTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_27 /* WLANTests.swift */,
			);
			name = WLANTests;
			path = Tests/WLANTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_29 /* Products */ = {
			isa = PBXGroup;
			children = (
				"WLAN::DarwinWLAN::Product" /* DarwinWLAN.framework */,
				"WLAN::WLAN::Product" /* WLAN.framework */,
				"WLAN::LinuxWLAN::Product" /* LinuxWLAN.framework */,
				"WLAN::WLANTests::Product" /* WLANTests.xctest */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_25 /* Tests */,
				OBJ_28 /* Xcode */,
				OBJ_29 /* Products */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* LinuxWLAN */,
				OBJ_10 /* DarwinWLAN */,
				OBJ_15 /* WLAN */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* LinuxWLAN */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* LinuxWLAN.swift */,
			);
			name = LinuxWLAN;
			path = Sources/LinuxWLAN;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"WLAN::DarwinWLAN" /* DarwinWLAN */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_35 /* Build configuration list for PBXNativeTarget "DarwinWLAN" */;
			buildPhases = (
				OBJ_38 /* Sources */,
				OBJ_43 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_45 /* PBXTargetDependency */,
			);
			name = DarwinWLAN;
			productName = DarwinWLAN;
			productReference = "WLAN::DarwinWLAN::Product" /* DarwinWLAN.framework */;
			productType = "com.apple.product-type.framework";
		};
		"WLAN::LinuxWLAN" /* LinuxWLAN */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_48 /* Build configuration list for PBXNativeTarget "LinuxWLAN" */;
			buildPhases = (
				OBJ_51 /* Sources */,
				OBJ_53 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_55 /* PBXTargetDependency */,
			);
			name = LinuxWLAN;
			productName = LinuxWLAN;
			productReference = "WLAN::LinuxWLAN::Product" /* LinuxWLAN.framework */;
			productType = "com.apple.product-type.framework";
		};
		"WLAN::SwiftPMPackageDescription" /* WLANPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_71 /* Build configuration list for PBXNativeTarget "WLANPackageDescription" */;
			buildPhases = (
				OBJ_74 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = WLANPackageDescription;
			productName = WLANPackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"WLAN::WLAN" /* WLAN */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_56 /* Build configuration list for PBXNativeTarget "WLAN" */;
			buildPhases = (
				OBJ_59 /* Sources */,
				OBJ_69 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = WLAN;
			productName = WLAN;
			productReference = "WLAN::WLAN::Product" /* WLAN.framework */;
			productType = "com.apple.product-type.framework";
		};
		"WLAN::WLANTests" /* WLANTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_82 /* Build configuration list for PBXNativeTarget "WLANTests" */;
			buildPhases = (
				OBJ_85 /* Sources */,
				OBJ_87 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_89 /* PBXTargetDependency */,
			);
			name = WLANTests;
			productName = WLANTests;
			productReference = "WLAN::WLANTests::Product" /* WLANTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "WLAN" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_29 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"WLAN::DarwinWLAN" /* DarwinWLAN */,
				"WLAN::LinuxWLAN" /* LinuxWLAN */,
				"WLAN::WLAN" /* WLAN */,
				"WLAN::SwiftPMPackageDescription" /* WLANPackageDescription */,
				"WLAN::WLANPackageTests::ProductTarget" /* WLANPackageTests */,
				"WLAN::WLANTests" /* WLANTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_38 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_39 /* CWInterface.swift in Sources */,
				OBJ_40 /* CWNetwork.swift in Sources */,
				OBJ_41 /* CWWiFiClient.swift in Sources */,
				OBJ_42 /* DarwinWLAN.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_51 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_52 /* LinuxWLAN.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_59 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_60 /* BSSID.swift in Sources */,
				OBJ_61 /* ByteSwap.swift in Sources */,
				OBJ_62 /* ByteValue.swift in Sources */,
				OBJ_63 /* Error.swift in Sources */,
				OBJ_64 /* Interface.swift in Sources */,
				OBJ_65 /* Network.swift in Sources */,
				OBJ_66 /* SSID.swift in Sources */,
				OBJ_67 /* ScanRecord.swift in Sources */,
				OBJ_68 /* WLANManager.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_74 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_75 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_85 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_86 /* WLANTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_45 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "WLAN::WLAN" /* WLAN */;
			targetProxy = 6EB7237C20EED8F2002D6A10 /* PBXContainerItemProxy */;
		};
		OBJ_55 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "WLAN::WLAN" /* WLAN */;
			targetProxy = 6EB7237D20EED8F2002D6A10 /* PBXContainerItemProxy */;
		};
		OBJ_80 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "WLAN::WLANTests" /* WLANTests */;
			targetProxy = 6EB7237F20EED8F3002D6A10 /* PBXContainerItemProxy */;
		};
		OBJ_89 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "WLAN::WLAN" /* WLAN */;
			targetProxy = 6EB7237E20EED8F2002D6A10 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_36 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = WLAN.xcodeproj/DarwinWLAN_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = DarwinWLAN;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 3.0;
				TARGET_NAME = DarwinWLAN;
			};
			name = Debug;
		};
		OBJ_37 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = WLAN.xcodeproj/DarwinWLAN_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = DarwinWLAN;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 3.0;
				TARGET_NAME = DarwinWLAN;
			};
			name = Release;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_49 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = WLAN.xcodeproj/LinuxWLAN_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = LinuxWLAN;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 3.0;
				TARGET_NAME = LinuxWLAN;
			};
			name = Debug;
		};
		OBJ_50 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = WLAN.xcodeproj/LinuxWLAN_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = LinuxWLAN;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 3.0;
				TARGET_NAME = LinuxWLAN;
			};
			name = Release;
		};
		OBJ_57 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = WLAN.xcodeproj/WLAN_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = WLAN;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 3.0;
				TARGET_NAME = WLAN;
			};
			name = Debug;
		};
		OBJ_58 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = WLAN.xcodeproj/WLAN_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = WLAN;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 3.0;
				TARGET_NAME = WLAN;
			};
			name = Release;
		};
		OBJ_72 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 3 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/3 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 3.0;
			};
			name = Debug;
		};
		OBJ_73 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 3 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/3 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 3.0;
			};
			name = Release;
		};
		OBJ_78 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_79 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_83 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = WLAN.xcodeproj/WLANTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 3.0;
				TARGET_NAME = WLANTests;
			};
			name = Debug;
		};
		OBJ_84 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = WLAN.xcodeproj/WLANTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 3.0;
				TARGET_NAME = WLANTests;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_2 /* Build configuration list for PBXProject "WLAN" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_35 /* Build configuration list for PBXNativeTarget "DarwinWLAN" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_36 /* Debug */,
				OBJ_37 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_48 /* Build configuration list for PBXNativeTarget "LinuxWLAN" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_49 /* Debug */,
				OBJ_50 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_56 /* Build configuration list for PBXNativeTarget "WLAN" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_57 /* Debug */,
				OBJ_58 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_71 /* Build configuration list for PBXNativeTarget "WLANPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_72 /* Debug */,
				OBJ_73 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_77 /* Build configuration list for PBXAggregateTarget "WLANPackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_78 /* Debug */,
				OBJ_79 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_82 /* Build configuration list for PBXNativeTarget "WLANTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_83 /* Debug */,
				OBJ_84 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
